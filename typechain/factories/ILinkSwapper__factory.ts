/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ILinkSwapper, ILinkSwapperInterface } from "../ILinkSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_inputWBNB",
        type: "uint256",
      },
    ],
    name: "getLinkAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "getPairAddress",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_linkAmount",
        type: "uint256",
      },
    ],
    name: "getWBNBAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBeebit",
        type: "address",
      },
    ],
    name: "setBeebitContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_linkAmount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class ILinkSwapper__factory {
  static readonly abi = _abi;
  static createInterface(): ILinkSwapperInterface {
    return new utils.Interface(_abi) as ILinkSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILinkSwapper {
    return new Contract(address, _abi, signerOrProvider) as ILinkSwapper;
  }
}
