/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LinkSwapper, LinkSwapperInterface } from "../LinkSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
      {
        internalType: "address",
        name: "_beebitsAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isTesting",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_inputWBNB",
        type: "uint256",
      },
    ],
    name: "getLinkAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "getPairAddress",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_linkAmount",
        type: "uint256",
      },
    ],
    name: "getWBNBAmountIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBeebit",
        type: "address",
      },
    ],
    name: "setBeebitContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_linkAmount",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapPath",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawLINK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawWLINK",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class LinkSwapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _router: string,
    _link: string,
    _beebitsAddress: string,
    _isTesting: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LinkSwapper> {
    return super.deploy(
      _router,
      _link,
      _beebitsAddress,
      _isTesting,
      overrides || {}
    ) as Promise<LinkSwapper>;
  }
  getDeployTransaction(
    _router: string,
    _link: string,
    _beebitsAddress: string,
    _isTesting: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _link,
      _beebitsAddress,
      _isTesting,
      overrides || {}
    );
  }
  attach(address: string): LinkSwapper {
    return super.attach(address) as LinkSwapper;
  }
  connect(signer: Signer): LinkSwapper__factory {
    return super.connect(signer) as LinkSwapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinkSwapperInterface {
    return new utils.Interface(_abi) as LinkSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinkSwapper {
    return new Contract(address, _abi, signerOrProvider) as LinkSwapper;
  }
}
